# Generated by Django 4.1 on 2023-03-23 10:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Flight",
            fields=[
                (
                    "flight_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="航班号",
                    ),
                ),
                ("aircraft_id", models.CharField(max_length=32, verbose_name="机号")),
                (
                    "aircraft_type",
                    models.CharField(
                        blank=True, max_length=16, null=True, verbose_name="机型"
                    ),
                ),
                (
                    "seats_num",
                    models.SmallIntegerField(blank=True, null=True, verbose_name="座位数"),
                ),
                (
                    "passenger_num",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="实际载客数"
                    ),
                ),
                (
                    "flight_type",
                    models.BooleanField(
                        blank=True, null=True, verbose_name="航班类型(国际/国内)"
                    ),
                ),
                ("parking_id", models.SmallIntegerField(verbose_name="机位号")),
                ("on_block_time", models.IntegerField(verbose_name="上轮挡时间")),
                ("off_block_time", models.IntegerField(verbose_name="撤轮挡时间")),
                (
                    "is_served",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="是否服务"
                    ),
                ),
            ],
            options={
                "verbose_name": "航班信息表",
                "verbose_name_plural": "航班信息表",
                "ordering": ["-on_block_time"],
            },
        ),
        migrations.CreateModel(
            name="RoadNodes",
            fields=[
                (
                    "node_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="道路节点号",
                    ),
                ),
                ("node_position_x", models.FloatField(default=0, verbose_name="x坐标")),
                ("node_position_y", models.FloatField(default=0, verbose_name="y坐标")),
                (
                    "node_type",
                    models.CharField(max_length=8, null=True, verbose_name="道路节点类型"),
                ),
                (
                    "node_function",
                    models.IntegerField(null=True, verbose_name="道路节点功能"),
                ),
                (
                    "node_capacity",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="节点容量"
                    ),
                ),
                (
                    "node_availability",
                    models.BooleanField(
                        default=True, max_length=8, verbose_name="道路节点可用状态"
                    ),
                ),
            ],
            options={
                "verbose_name": "道路节点信息表",
                "verbose_name_plural": "道路节点信息表",
                "ordering": ["node_id"],
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earliest_start_time", models.IntegerField(verbose_name="最早开始时间")),
                ("latest_start_time", models.IntegerField(verbose_name="最晚开始时间")),
                ("minimum_duration", models.IntegerField(verbose_name="最短持续时间")),
                ("maximum_duration", models.IntegerField(verbose_name="最长持续时间")),
                ("earliest_end_time", models.IntegerField(verbose_name="最早结束时间")),
                ("latest_end_time", models.IntegerField(verbose_name="最晚结束时间")),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("QY", "牵引，牵引车"),
                            ("XK", "下客，客梯车"),
                            ("QJ", "清洁，清洁车"),
                            ("JY", "加油，加油车"),
                            ("PC", "配餐，配餐车"),
                            ("SK", "上客，客梯车"),
                            ("HY", "货运，行李牵引车"),
                            ("TC", "推出，牵引车"),
                        ],
                        max_length=16,
                        verbose_name="服务类型",
                    ),
                ),
                (
                    "service_vehicle_type",
                    models.CharField(
                        choices=[
                            ("QY", "QY"),
                            ("XK", "KT"),
                            ("QJ", "QJ"),
                            ("JY", "JY"),
                            ("PC", "CS"),
                            ("SK", "KT"),
                            ("HY", "XL"),
                            ("TC", "QY"),
                        ],
                        max_length=16,
                        verbose_name="服务需求车辆类型",
                    ),
                ),
                (
                    "service_vehicle_num",
                    models.SmallIntegerField(verbose_name="服务需求车辆数量"),
                ),
                (
                    "service_delay_time",
                    models.IntegerField(blank=True, null=True, verbose_name="服务最终延误时间"),
                ),
                (
                    "pre_order_maximum_interval",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="前序最大时间间隔"
                    ),
                ),
                (
                    "is_scheduled",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="是否已安排车辆"
                    ),
                ),
                (
                    "flight",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="Service_flight",
                        to="web.flight",
                        verbose_name="航班号",
                    ),
                ),
                (
                    "post_order_service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="Service_post_order_service",
                        to="web.service",
                        verbose_name="后序服务",
                    ),
                ),
                (
                    "pre_order_service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="Service_pre_order_service",
                        to="web.service",
                        verbose_name="前序服务",
                    ),
                ),
                (
                    "service_end_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="Service_service_end_node",
                        to="web.roadnodes",
                        verbose_name="服务结束节点",
                    ),
                ),
                (
                    "service_start_node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="Service_service_start_node",
                        to="web.roadnodes",
                        verbose_name="服务起始节点",
                    ),
                ),
            ],
            options={
                "verbose_name": "服务信息表",
                "verbose_name_plural": "服务信息表",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "vehicle_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="车辆号",
                    ),
                ),
                ("vehicle_type", models.CharField(max_length=16, verbose_name="车辆类型")),
                (
                    "vehicle_energy",
                    models.CharField(max_length=16, verbose_name="车辆能源类型"),
                ),
                (
                    "vehicle_full_energy_mileage",
                    models.CharField(max_length=16, verbose_name="车辆满能源里程"),
                ),
                (
                    "vehicle_current_position_x",
                    models.FloatField(verbose_name="车辆当前x坐标"),
                ),
                (
                    "vehicle_current_position_y",
                    models.FloatField(verbose_name="车辆当前y坐标"),
                ),
                (
                    "vehicle_status",
                    models.SmallIntegerField(default=1, verbose_name="车辆状态"),
                ),
            ],
            options={
                "verbose_name": "车辆信息表",
                "verbose_name_plural": "车辆信息表",
                "ordering": ["vehicle_id"],
            },
        ),
        migrations.CreateModel(
            name="VehicleService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="VehicleService_service",
                        to="web.service",
                        verbose_name="服务号",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="VehicleService_vehicle",
                        to="web.vehicle",
                        verbose_name="车辆号",
                    ),
                ),
            ],
            options={
                "verbose_name": "车辆服务信息表",
                "verbose_name_plural": "车辆服务信息表",
                "ordering": ["vehicle_id", "service_id"],
            },
        ),
        migrations.CreateModel(
            name="VehiclePath",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "node_arrival_time",
                    models.IntegerField(blank=True, null=True, verbose_name="路径节点到达时间"),
                ),
                (
                    "node_dwell_time",
                    models.IntegerField(blank=True, null=True, verbose_name="路径节点停留时间"),
                ),
                (
                    "node_delay_time",
                    models.IntegerField(blank=True, null=True, verbose_name="路径节点延误时间"),
                ),
                (
                    "node",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="VehiclePath_node",
                        to="web.roadnodes",
                        verbose_name="路径节点号",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="VehiclePath_service",
                        to="web.service",
                        verbose_name="服务号",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="VehiclePath_vehicle",
                        to="web.vehicle",
                        verbose_name="车辆号",
                    ),
                ),
            ],
            options={
                "verbose_name": "车辆路径表",
                "verbose_name_plural": "车辆路径表",
                "ordering": ["vehicle_id"],
            },
        ),
        migrations.AddField(
            model_name="vehicle",
            name="vehicle_path_list",
            field=models.ManyToManyField(through="web.VehiclePath", to="web.roadnodes"),
        ),
        migrations.AddField(
            model_name="vehicle",
            name="vehicle_service_list",
            field=models.ManyToManyField(
                through="web.VehicleService", to="web.service"
            ),
        ),
        migrations.CreateModel(
            name="RoadSections",
            fields=[
                (
                    "section_id",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="路段号",
                    ),
                ),
                (
                    "section_type",
                    models.CharField(
                        blank=True, max_length=8, null=True, verbose_name="路段类型"
                    ),
                ),
                (
                    "section_availability",
                    models.BooleanField(default=True, verbose_name="路段可用状态"),
                ),
                (
                    "section_speed_limit",
                    models.FloatField(
                        blank=True, max_length=8, null=True, verbose_name="路段限速"
                    ),
                ),
                (
                    "section_lanes_num",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="路段车道数"
                    ),
                ),
                (
                    "section_length",
                    models.FloatField(default=0, max_length=8, verbose_name="路段长度"),
                ),
                (
                    "section_is_one_way",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="是否是单向路段"
                    ),
                ),
                (
                    "section_end_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RoadSections_section_end_node",
                        to="web.roadnodes",
                        verbose_name="路段结束节点",
                    ),
                ),
                (
                    "section_start_node",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RoadSections_section_start_node",
                        to="web.roadnodes",
                        verbose_name="路段开始节点",
                    ),
                ),
            ],
            options={
                "verbose_name": "路段信息表",
                "verbose_name_plural": "路段信息表",
                "ordering": ["section_id"],
            },
        ),
        migrations.AddField(
            model_name="roadnodes",
            name="node_adjacent_list",
            field=models.ManyToManyField(
                through="web.RoadSections", to="web.roadnodes"
            ),
        ),
    ]
